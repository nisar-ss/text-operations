{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","setstyle","color","mode","backgroundColor","React","createElement","className","concat","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","placeholder","style","onClick","togglemode","height","width","cursor","border","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","settext","Fragment","heading","value","onChange","event","target","rows","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","split","filter","Element","Alert","alert","About","myStyle","data-bs-parent","defaultProps","App","setmode","_useState3","_useState4","setalert","messege","setTimeout","cls","document","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","rictMode"],"mappings":"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","file":"static/js/main.9aa4cfa8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    let setstyle = {\r\n        color: props.mode === 'dark' ? 'white' : 'black',\r\n        backgroundColor: props.mode === 'dark' ? '#343a40' : 'white'\r\n    }\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\" role=\"search\" >\r\n                            <input className=\"form-control mx-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" style={setstyle} />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\" style={setstyle}>Search</button>\r\n                        </form>\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"bg-primary rounded mx-2\" onClick={() => props.togglemode('primary')} style={{ height: '30px', width: '30px', cursor: 'pointer' }}>\r\n                            </div>\r\n                            <div className=\"bg-danger rounded mx-2\" onClick={() => props.togglemode('danger')} style={{ height: '30px', width: '30px', cursor: 'pointer' }}>\r\n                            </div>\r\n                            <div className=\"bg-success rounded mx-2\" onClick={() => props.togglemode('success')} style={{ height: '30px', width: '30px', cursor: 'pointer' }}>\r\n                            </div>\r\n                            <div className=\"bg-warning rounded mx-2\" onClick={() => props.togglemode('warning')} style={{ height: '30px', width: '30px', cursor: 'pointer' }}>\r\n                            </div>\r\n                            <div className=\"bg-dark rounded mx-2\" onClick={() => props.togglemode('dark')} style={{ height: '30px', width: '30px', border :'1px solid white', cursor: 'pointer' }}>\r\n                            </div>\r\n                            <div className=\"bg-white rounded mx-2\" onClick={() => props.togglemode('white')} style={{ height: '30px', width: '30px', border: '1px solid black', cursor: 'pointer' }}>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={() => props.togglemode(null)} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav >\r\n        </div >\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'default title',\r\n    aboutText: 'default about'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleOnChange = (event) => {\r\n        settext(event.target.value)\r\n    }\r\n    const handleupclick = () => {\r\n        let newtext = text.toUpperCase()\r\n        settext(newtext)\r\n        props.showAlert(\"Converted to uppercase\", \"Success\")\r\n    }\r\n    const handlelowerclick = () => {\r\n        let newtext = text.toLowerCase()\r\n        settext(newtext)\r\n        props.showAlert(\"Converted to lowercase\", \"Success\")\r\n    }\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n    const cleartext = () => {\r\n        let newtext = \"\";\r\n        settext(newtext)\r\n        props.showAlert(\"Text cleared successfully!\", \"Success\")\r\n    }\r\n    const [text, settext] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h5 style={{}}><b>{props.heading}</b></h5>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? 'rgb(80 91 103)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"mybox\" rows=\"10\"></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={handleupclick}>Convert to upper case</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={handlelowerclick}>Convert to lower case</button>\r\n                <button disabled={text.length === 0} type=\"submit\" onClick={speak} className=\"btn btn-warning mx-2 my-2\">Speak</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2 my-2\" onClick={cleartext}>Clear Text</button>\r\n            </div><hr />\r\n            <div className=\"container2 my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h5><b>Time to read</b></h5>\r\n                <p><b>{text.split(/\\s+/).filter((Element) => { return Element.length !== 0 }).length}</b> Word(s) and <b>{text.length}</b> Character(s)</p>\r\n                <p><b>{text.split(\" \").filter((Element) => { return Element.length !== 0 }).length * 0.26 / 60}</b> Minutes to read</p>\r\n            </div><hr />\r\n            <div className=\"preview\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h5><b>Preview</b></h5>\r\n                <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style={{ height:'50px' }}>\r\n            {props.alert && <div className=\"alert alert-success alert-dismissible fade show role=alert\">\r\n                <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setmyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n\r\n    const myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : 'black',\r\n        backgroundColor: props.mode === 'dark' ? '#343a40' : 'white'\r\n    }\r\n    return (\r\n        <div className='container' style={myStyle}>\r\n            <h3 className='my-3'>About Us</h3>\r\n            <div className=\"accordion my-3\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                            About\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './Appa.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport React, { useState } from 'react'\n// import Alert from './Components/Alert';\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  // FUNCTION OF ALERT \n  const showAlert = (messege, type) => {\n    setalert({\n      msg: messege,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 4000);\n  }\n\n  // FUNCTION OF DARK MODE \nconst removebg=()=>{\n  document.body.classList.remove('bg-light')\n  document.body.classList.remove('bg-white')\n  document.body.classList.remove('bg-dark')\n  document.body.classList.remove('bg-primary')\n  document.body.classList.remove('bg-warning')\n  document.body.classList.remove('bg-success')\n  document.body.classList.remove('bg-danger')\n}\n\n  const togglemode = (cls) => {\n    removebg();\n    document.body.classList.add('bg-'+cls)\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#343a40';\n      showAlert(\"Dark Mode has been Enabled\", \"Success\");\n      document.title = 'TextUtils Dark Mode'\n      setTimeout(() => {\n        document.title = 'TextUtils'\n      }, 5000);\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been Enabled\", \"Success\");\n      document.title = 'TextUtils Light Mode'\n      setTimeout(() => {\n        document.title = 'TextUtils'\n      }, 5000);\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextOps\" mode={mode} togglemode={togglemode} aboutText='About' />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading=\"TextUtils - Wod Counter, Chracter Counter, Remove extra spaces\" mode={mode} />\n      </div>\n      <About mode={mode} />\n      {/* <Routes> */}\n      {/* <Route path=\"/about\"> */}\n      {/* </Route> */}\n      {/* <Route path=\"/\"> */}\n      {/* </Route> */}\n      {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode rictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}